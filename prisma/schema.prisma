// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ClientStatus {
  standard // Стандартный клиент
  poor // Клиент с низким рейтингом
  rich // Клиент с высоким рейтингом
}

enum OrderStatus {
  ACTIVE
  COMPLETED
  CANCELLED
}

model project {
  id          Int    @id @default(autoincrement())
  projectType String
  name        String
  email       String
  phone       String
  budget      String
  description String
}

model admins {
  id            Int       @id @default(autoincrement())
  name          String    @unique @db.VarChar(255)
  password_hash String    @db.VarChar(255)
  role          String    @db.VarChar(50)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
}

model clients {
  id                        Int          @id @default(autoincrement())
  name                      String       @db.VarChar(50)
  email                     String       @db.VarChar(20)
  phone_1                   String       @db.VarChar(20)
  status                    ClientStatus @default(standard)
  project_type              String?      @db.VarChar(50) // Тип проекта
  budget                    String?      @db.VarChar(20) // Бюджет
  message                   String?      @db.Text // Сообщение клиента
  phone_2                   String?      @db.VarChar(20)
  additional_social_network String?      @db.VarChar(50) // Доп. социальная сеть (может быть пустым)
  correspondence            String?      @db.Text
  created_at                DateTime?    @default(now()) @db.Timestamp(6)
  socialMedia               String?      @db.VarChar(100) // Добавляем поле

  orders Order[]
}

enum specialityEnum {
  Frontend
  Seo
  FullStack
  Backend
  Designer
  Web3
  Devops
}

model workers {
  id          Int            @id @default(autoincrement())
  name        String         @db.VarChar(50)
  salary      String         @db.VarChar(50)
  currency    String         @default("USD")
  speciality  specialityEnum @default(FullStack)
  documents   String[]       @db.VarChar(1000)
  description String?        @db.VarChar(50)
  contract    String?        @db.VarChar(50)
  phone_1     String?        @db.VarChar(50)
  phone_2     String?        @db.VarChar(50)
  email       String?        @db.VarChar(50)
  created_at  DateTime?      @default(now()) @db.Timestamp(6)

  orders Order[]
}

model Order {
  id          String      @id @default(cuid())
  client      clients     @relation(fields: [clientId], references: [id])
  clientId    Int
  status      OrderStatus @default(ACTIVE)
  amount      Float
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  workers     workers?    @relation(fields: [workersId], references: [id])
  workersId   Int?
}

model ExchangeRate {
  id        String   @id @default(cuid())
  currency  String   @unique
  rate      Float
  updatedAt DateTime @updatedAt
}
